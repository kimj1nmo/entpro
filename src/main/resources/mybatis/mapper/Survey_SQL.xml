<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.page.survey.SurveyMapper">
	
	<!-- noticeAjax -> map : {currentPage=2, keyword=버스} -->
   <sql id="where">
      <if test="keyword!=null and keyword!=''">
      AND    (
                 NTCE_BOARD_TTL   LIKE  '%' || #{keyword} || '%'
          )
      </if>
   </sql>
   <!-- @@@@ 설문 상태 업데이트 @@@@ -->
   <update id="updateSurveyStatus" parameterType="map">
    UPDATE survey
    SET srvy_status = #{status}
    WHERE srvy_no = #{srvyNo}
</update>
   
   <update id="startSurvey" parameterType="map">
    UPDATE survey
    SET srvy_status = 1
    WHERE srvy_no = #{srvyNo}
</update>
   
   
   <update id="stopSurvey" parameterType="map">
    UPDATE survey
    SET srvy_status = 2
    WHERE srvy_no = #{srvyNo}
</update>
   
   
   <update id="endSurvey" parameterType="map">
    UPDATE survey
    SET srvy_status = 3
    WHERE srvy_no = #{srvyNo}
</update>
   
	<!-- 설문조사 리스트
	<select id="list" parameterType="hashMap" resultType="SurveyVO">
	SELECT
	    srvy_no
	  , srvy_ttl
	  , srvy_cn
	  , srvy_reg_date
	  , mem_id
	  , srvy_bgng_data
	  , srvy_end_date
	  , srvy_last_end_date
	  , srvy_updt_date
	  , srvy_status
	FROM
	    survey
	    
	    
	    SELECT T.RNUM, T.srvy_no, T.srvy_ttl, T.srvy_cn, T.srvy_reg_date, T.mem_id, T.srvy_bgng_data, T.srvy_end_date,
				T.srvy_end_date, T.srvy_last_end_date, T.srvy_updt_date, T.srvy_status
		FROM
		(
		SELECT ROW_NUMBER() OVER(ORDER BY srvy_no) RNUM,
		srvy_no, srvy_ttl, srvy_cn, to_char(srvy_reg_date, 'yyyy-mm-dd') srvy_reg_date, mem_id, srvy_bgng_data, srvy_end_date,
		srvy_end_date, srvy_last_end_date, srvy_updt_date, srvy_status
		FROM survey
		WHERE 1 = 1	
		<include refid="where"></include>
		) T
		WHERE T.RNUM BETWEEN (#{currentPage} * 10) -(10-1) AND (#{currentPage} * 10)
	</select> -->
	
	 <select id="getTotal" parameterType="hashMap" resultType="int">
    SELECT COUNT(*) FROM survey
    WHERE 1 = 1
    <include refid="where"></include>
   </select>
   
   <!-- 설문 목록 조회 -->
	<select id="getSurveyList" parameterType="hashMap" resultType="kr.or.ddit.vo.SurveyVO">
			SELECT
	    srvy_no
	  , srvy_ttl
	  , srvy_cn
	  , to_char(srvy_reg_date, 'yyyy-mm-dd hh:mm:ss') srvy_reg_date
	  , mem_id
	  , to_char(srvy_bgng_data, 'yyyy-mm-dd hh:mm:ss') srvy_bgng_data
	  , srvy_end_date
	  , srvy_last_end_date
	  , srvy_updt_date
	  , srvy_status
	FROM
	    survey
	    order by srvy_reg_date desc
	</select>
	
	<!--설문 상세 조회 -->
	<select id="getSurveyDetail"  resultMap="surveyMap">
	SELECT
	    survey.srvy_no
	  , survey.srvy_ttl
	  , survey.srvy_cn
	  , survey.srvy_reg_date
	  , survey.mem_id
	  , survey.srvy_bgng_data
	  , survey.srvy_end_date
	  , survey.srvy_last_end_date
	  , survey.srvy_updt_date
	  , survey.srvy_status
	  , srvy_question.srvy_qstn_no
	  , srvy_question.srvy_no
	  , srvy_question.srvy_qstn
	  , srvy_question.srvy_qstn_cn
	  , srvy_question.srvy_qstn_order
	  , srvy_question.srvy_qstn_required
	  , srvy_article.srvy_artcl_no
	  , srvy_article.srvy_qstn_no
	  , srvy_article.srvy_artcl_order
	  , srvy_article.srvy_artcl_cn
	FROM
	    survey
	INNER JOIN srvy_question 
		ON survey.srvy_no = srvy_question.srvy_no
	INNER JOIN srvy_article 
		ON srvy_question.srvy_qstn_no = srvy_article.srvy_qstn_no
	WHERE 
		SURVEY.SRVY_NO=#{srvyNo}
	</select>
	
	<!--설문 상세 조회 -->
	<select id="getSurveyForm"  resultMap="surveyMap">
	SELECT
	    survey.srvy_no
	  , survey.srvy_ttl
	  , survey.srvy_cn
	  , survey.srvy_reg_date
	  , survey.mem_id
	  , survey.srvy_bgng_data
	  , survey.srvy_end_date
	  , survey.srvy_last_end_date
	  , survey.srvy_updt_date
	  , survey.srvy_status
	  , srvy_question.srvy_qstn_no
	  , srvy_question.srvy_no
	  , srvy_question.srvy_qstn
	  , srvy_question.srvy_qstn_cn
	  , srvy_question.srvy_qstn_order
	  , srvy_question.srvy_qstn_required
	  , srvy_article.srvy_artcl_no
	  , srvy_article.srvy_qstn_no
	  , srvy_article.srvy_artcl_order
	  , srvy_article.srvy_artcl_cn
	FROM
	    survey
	INNER JOIN srvy_question 
		ON survey.srvy_no = srvy_question.srvy_no
	INNER JOIN srvy_article 
		ON srvy_question.srvy_qstn_no = srvy_article.srvy_qstn_no
	WHERE 
		SURVEY.SRVY_NO=#{srvyNo}
	</select>
	
	<select id="getSurveyResponse"  resultMap="surveyMap">
	SELECT
	    survey.srvy_no
	  , survey.srvy_ttl
	  , survey.srvy_cn
	  , survey.srvy_reg_date
	  , survey.mem_id
	  , survey.srvy_bgng_data
	  , survey.srvy_end_date
	  , survey.srvy_last_end_date
	  , survey.srvy_updt_date
	  , survey.srvy_status
	  , srvy_question.srvy_qstn_no
	  , srvy_question.srvy_no
	  , srvy_question.srvy_qstn
	  , srvy_question.srvy_qstn_cn
	  , srvy_question.srvy_qstn_order
	  , srvy_question.srvy_qstn_required
	  , srvy_article.srvy_artcl_no
	  , srvy_article.srvy_qstn_no
	  , srvy_article.srvy_artcl_order
	  , srvy_article.srvy_artcl_cn
	FROM
	    survey
	INNER JOIN srvy_question 
		ON survey.srvy_no = srvy_question.srvy_no
	INNER JOIN srvy_article 
		ON srvy_question.srvy_qstn_no = srvy_article.srvy_qstn_no
	WHERE 
		SURVEY.SRVY_NO=#{srvyNo}
	</select>
	
	<!-- @@@@@@@@@@@@@@@ 수정 @@@@@@@@@@@@@@@@@@@-->
	<update id="updateSurvey" parameterType="kr.or.ddit.vo.SurveyVO">
    <!-- SURVEY 테이블 업데이트 -->
    UPDATE SURVEY
    SET 
         srvy_ttl = #{srvyTtl}
        , srvy_cn = #{srvyCn}
        , srvy_bgng_data = #{srvyBgngData}
        , srvy_end_date = #{srvyEndDate}
        , srvy_updt_date = SYSDATE
    WHERE srvy_no = #{srvyNo}
	</update>
	
    <!-- SRVY_QUESTION 테이블 업데이트 -->
    <update id="updateQuestion" parameterType="kr.or.ddit.vo.SurveyQuestionVO">
    UPDATE SRVY_QUESTION
    SET 
         srvy_qstn_cn = #{srvyQstnCn}
        , srvy_qstn_order = #{srvyQstnOrder}
        , SRVY_QSTN_REQUIRED = #{srvyQstnRequired}
    WHERE srvy_qstn_NO = #{srvyQstnNo}
	</update>
	
    <!-- SRVY_ARTICLE 테이블 업데이트 -->
    <update id="updateArticle" parameterType="kr.or.ddit.util.ArticlePage">
    UPDATE SRVY_ARTICLE
    SET 
        srvy_artcl_order = #{srvyArtclOrder}
        , srvy_artcl_cn = #{srvyArtclCn}
    WHERE srvy_artcl_NO = #{srvyArtclNo}
</update>

<!-- @@@@@@@@@@@@@@@@@@@@ 등록 @@@@@@@@@@@@@@@@@@@@@@@@-->
<insert id="insertSurvey" parameterType="kr.or.ddit.vo.SurveyVO">
<selectKey resultType="int" order="BEFORE" keyProperty="srvyNo">
        SELECT SURVEY_SEQ.NEXTVAL FROM DUAL
</selectKey>
INSERT INTO SURVEY (
	  srvy_no
    , srvy_ttl
    , srvy_cn
    , srvy_reg_date
    , mem_id
    , srvy_bgng_data
    , srvy_end_date
    , srvy_last_end_date
    , srvy_updt_date
    , srvy_status
) VALUES ( #{srvyNo}
,#{srvyTtl}, #{srvyCn}, SYSDATE, #{memId}, #{srvyBgngData}, #{srvyEndDate}, #{srvyLastEndDate}, #{srvyUpdtDate}, 1)
</insert>

<insert id="insertQuestion" parameterType="kr.or.ddit.vo.SurveyQuestionVO">
<selectKey resultType="int" order="BEFORE" keyProperty="srvyQstnNo">
        SELECT SRVY_QUESTION_SEQ.NEXTVAL FROM DUAL
</selectKey>
INSERT INTO srvy_question (
	  srvy_qstn_no
    , srvy_no
    , srvy_qstn
    , srvy_qstn_cn
    , srvy_qstn_order
    , SRVY_QSTN_REQUIRED
) VALUES ( #{srvyQstnNo}
         , #{srvyNo}
         , #{srvyQstn}
         , #{srvyQstnCn}
         , #{srvyQstnOrder}
         , #{srvyQstnRequired}
         ) 
</insert>

<insert id="insertArticle" parameterType="kr.or.ddit.vo.SurveyArticleVO">
<selectKey resultType="int" order="BEFORE" keyProperty="srvyArtclNo">
        SELECT SRVY_ARTICLE_SEQ.NEXTVAL FROM DUAL
</selectKey>
INSERT INTO srvy_article (
	  srvy_artcl_no
    , srvy_qstn_no
    , srvy_artcl_order
    , srvy_artcl_cn
) VALUES ( #{srvyArtclNo}
         , #{srvyQstnNo}
         , #{srvyArtclOrder}
         , #{srvyArtclCn})    
</insert>
<!-- @@@@@@@@@@@@@@@@@@@@ 삭제 @@@@@@@@@@@@@@@@@@@@@@@@-->

<delete id="deleteSurvey" parameterType="int">
DELETE FROM SURVEY
WHERE SRVY_NO = #{srvyNo}
</delete>



<!-- @@@@@@@@@@@@@@@@@@@@ 설문 응답 등록 @@@@@@@@@@@@@@@@@@@@@@@@-->

<insert id="insertResponse" parameterType="SurveyResponseVO">
    INSERT INTO SURVEY_RESPONSE (
        srvy_rspns_no,
        srvy_artcl_no,
        mem_id,
        srvy_cn_date
    ) VALUES (
        SURVEY_RESPONSE_SEQ.NEXTVAL,
        #{srvyArtclNo},
        #{memId},
        sysdate
    )
</insert>

<select id="getSurveyParticipationBySurvey" parameterType="map" resultType="map">
     SELECT 
        TO_CHAR(R.srvy_cn_date, 'YYYY-MM-DD') AS participation_date,
        COUNT(DISTINCT R.mem_id) AS participation_count
    FROM survey_response R
    JOIN srvy_article A ON R.srvy_artcl_no = A.srvy_artcl_no
    JOIN srvy_question Q ON A.srvy_qstn_no = Q.srvy_qstn_no
    WHERE Q.srvy_no = #{srvyNo}
      AND TRUNC(R.srvy_cn_date) BETWEEN TO_DATE(#{startDate}, 'YYYY-MM-DD') AND TO_DATE(#{endDate}, 'YYYY-MM-DD')
    GROUP BY TO_CHAR(R.srvy_cn_date, 'YYYY-MM-DD')
    ORDER BY participation_date
</select>



<select id="getQuestionResponseStats" parameterType="int" resultType="map">
    SELECT 
        Q.srvy_qstn_no AS question_no, 
        Q.srvy_qstn AS question_title, 
        A.srvy_artcl_cn AS option_title, 
        COUNT(R.SRVY_RSPNS_NO) AS response_count
    FROM 
        srvy_question Q
    LEFT JOIN srvy_article A ON Q.srvy_qstn_no = A.srvy_qstn_no
    LEFT JOIN survey_response R ON A.srvy_artcl_no = R.srvy_artcl_no
    WHERE Q.srvy_no = #{srvyNo}
    GROUP BY 
        Q.srvy_qstn_no, 
        Q.srvy_qstn, 
        A.srvy_artcl_cn
    ORDER BY 
        Q.srvy_qstn_no, 
        A.srvy_artcl_cn
</select>

<select id="getSurveyTotalParticipants" parameterType="int" resultType="int">
    SELECT COUNT(DISTINCT R.mem_id) AS total_participants
    FROM survey S
    JOIN srvy_question Q ON S.srvy_no = Q.srvy_no
    JOIN srvy_article A ON Q.srvy_qstn_no = A.srvy_qstn_no
    JOIN survey_response R ON A.srvy_artcl_no = R.srvy_artcl_no
    WHERE S.srvy_no = #{srvyNo}
</select>

<select id="getSurveyResponseData" parameterType="int" resultType="map">
    SELECT 
        R.srvy_rspns_no AS srvyRspnsNo,
        Q.srvy_qstn AS question,
        A.srvy_artcl_cn AS article,
        R.mem_id AS memId,
        R.srvy_cn_date AS srvyCnDate
    FROM survey_response R
    JOIN srvy_article A ON R.srvy_artcl_no = A.srvy_artcl_no
    JOIN srvy_question Q ON A.srvy_qstn_no = Q.srvy_qstn_no
    WHERE Q.srvy_no = #{srvyNo}
</select>

<select id="getResponse" parameterType="kr.or.ddit.vo.SurveyVO" resultType="map">
SELECT
    Q.srvy_qstn_no AS question_no,      -- 질문 번호
    Q.srvy_qstn AS question_title,      -- 질문 내용
    A.srvy_artcl_cn AS option_title,    -- 객관식 문항 (모든 보기 출력)
    COALESCE(R.mem_id, #{memId}) AS mem_id,  -- 응답 안 한 경우에도 mem_id 유지
    CASE 
        WHEN R.srvy_artcl_no IS NOT NULL THEN 'Y'  -- 응답자가 선택한 항목이면 'Y'
        ELSE 'N'                                   -- 선택하지 않은 항목이면 'N'
    END AS selected
FROM
    srvy_question Q
LEFT JOIN srvy_article A 
    ON Q.srvy_qstn_no = A.srvy_qstn_no  -- 객관식 항목과 질문을 연결
LEFT JOIN survey_response R 
    ON A.srvy_artcl_no = R.srvy_artcl_no  
    AND R.mem_id = #{memId}  -- 특정 응답자(memId)에 대해 필터링
WHERE 
    Q.srvy_no = #{srvyNo}  -- 특정 설문만 조회
ORDER BY
    Q.srvy_qstn_no, 
    A.srvy_artcl_cn
</select>

<!-- 설문 응답자 목록 조회 -->
<select id="getSurveyParticipants" parameterType="int" resultType="map">
SELECT DISTINCT
    R.mem_id AS memId
FROM
    srvy_question Q
LEFT JOIN srvy_article A 
    ON Q.srvy_qstn_no = A.srvy_qstn_no  
LEFT JOIN survey_response R 
    ON A.srvy_artcl_no = R.srvy_artcl_no  
WHERE 
    Q.srvy_no = #{srvyNo}
    AND R.mem_id IS NOT NULL  -- NULL 응답자 제외
ORDER BY
    R.mem_id
</select>


<!-- <insert id="insertResponses" parameterType="list">
    INSERT ALL
    <foreach collection="responseList" item="response">
        INTO SURVEY_RESPONSE (
            srvy_rspns_no,
            srvy_artcl_no,
            mem_id,
            srvy_cn_date
        ) VALUES (
            SURVEY_RESPONSE_SEQ.NEXTVAL,
            #{response.srvyArtclNo},
            #{response.memId},
            sysdate
        )
    </foreach>
    SELECT 1 FROM DUAL
</insert>
-->

<!-- <insert id="insertResponses" parameterType="list"> -->
<!--     <selectKey resultType="int" order="BEFORE" keyProperty="srvyRspnsNo"> -->
<!--         SELECT SURVEY_RESPONSE_SEQ.NEXTVAL FROM DUAL -->
<!--     </selectKey> -->
<!--     INSERT INTO SURVEY_RESPONSE ( -->
<!--         srvy_rspns_no, -->
<!--         srvy_artcl_no, -->
<!--         mem_id, -->
<!--         srvy_cn_date -->
<!--     ) -->
<!--     VALUES  -->
<!--     <foreach collection="responseList" item="response" separator=","> -->
<!--         ( -->
<!--             #{response.srvyRspnsNo}, -->
<!--             #{response.srvyArtclNo}, -->
<!--             #{response.memId}, -->
<!--             sysdate -->
<!--         ) -->
<!--     </foreach> -->
<!-- </insert> -->



<!-- 
<insert id="insertResponse" parameterType="kr.or.ddit.vo.SurveyResponseVO">
<selectKey resultType="int" order="BEFORE" keyProperty="srvyRspnsNo">
        SELECT SURVEY_RESPONSE_SEQ.NEXTVAL FROM DUAL
</selectKey>
INSERT INTO SURVEY_RESPONSE (
	  srvy_rspns_no
    , srvy_artcl_no
    , mem_id
    , srvy_rspns_cn
    , srvy_cn_date
) VALUES ( srvy_rspns_no
         , #{srvyArtclNo}
         , #{memId}
         , #{srvyRspnsCn}
         , #{srvy_cn_date}
         )
</insert>
 -->


	<resultMap type="kr.or.ddit.vo.SurveyVO" id="surveyMap">
		<result property="srvyNo" column="SRVY_NO"/>
		<result property="srvyTtl" column="SRVY_TTL"/>
		<result property="srvyCn" column="SRVY_CN"/>
		<result property="srvyRegDate" column="SRVY_REG_DATE"/>
		<result property="memId" column="MEM_ID"/>
		<result property="srvyBgngData" column="SRVY_BGNG_DATA"/>
		<result property="srvyEndDate" column="SRVY_END_DATE"/>
		<result property="srvyLastEndDate" column="SRVY_LAST_END_DATE"/>
		<result property="srvyUpdtDate" column="SRVY_UPDT_DATE"/>
		<result property="srvyStatus" column="SRVY_STATUS"/>
		 <!-- 1:N 관계 -->
    	<collection property="surveyQuestionVOList" resultMap="surveyQuestionMap"/>
	</resultMap>
	
	<!-- 설문 : 설문 질문 = 1 : N -->
	<resultMap type="kr.or.ddit.vo.SurveyQuestionVO" id="surveyQuestionMap">
		<result property="srvyQstnNo" column="SRVY_QSTN_NO"/>
		<result property="srvyNo" column="SRVY_NO"/>
		<result property="srvyQstn" column="SRVY_QSTN"/>
		<result property="srvyQstnCn" column="SRVY_QSTN_CN"/>
		<result property="srvyQstnOrder" column="SRVY_QSTN_ORDER"/>
		<result property="srvyQstnRequired" column="SRVY_QSTN_REQUIRED"/>
		<collection property="surveyArticleVOList" resultMap="surveyArticleMap"></collection>
	</resultMap>
	
	<!-- 설문 질문 : 설문 항목 = 1 : N -->
	<resultMap type="kr.or.ddit.vo.SurveyArticleVO" id="surveyArticleMap">
		<result property="srvyArtclNo" column="SRVY_ARTCL_NO"/>
		<result property="srvyQstnNo" column="SRVY_QSTN_NO"/>
		<result property="srvyArtclOrder" column="SRVY_ARTCL_ORDER"/>
		<result property="srvyArtclCn" column="SRVY_ARTCL_CN"/>
	</resultMap>

	<resultMap type="kr.or.ddit.vo.AuthVO" id="authMap">
		<result column="mem_id"    property="memId" />
		<result column="auth_name" property="authName" />
	</resultMap>
	
	
	
</mapper>